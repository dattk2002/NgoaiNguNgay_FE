import { useState } from "react";
import { useNavigate } from "react-router-dom";

const BecomeATutorLandingPage = () => {
    const navigate = useNavigate();
    const [activeTab, setActiveTab] = useState(0);

    const benefits = [
        {
            icon: "üí∞",
            title: "Thu nh·∫≠p linh ho·∫°t",
            description: "T·ª± ƒë·∫∑t gi√° v√† qu·∫£n l√Ω l·ªãch tr√¨nh c·ªßa b·∫°n. Ki·∫øm ti·ªÅn t·ª´ ƒëam m√™ gi·∫£ng d·∫°y."
        },
        {
            icon: "üåç",
            title: "K·∫øt n·ªëi to√†n c·∫ßu",
            description: "D·∫°y h·ªçc vi√™n t·ª´ kh·∫Øp n∆°i tr√™n th·∫ø gi·ªõi, m·ªü r·ªông t·∫ßm nh√¨n vƒÉn h√≥a."
        },
        {
            icon: "‚è∞",
            title: "Th·ªùi gian t·ª± do",
            description: "L√†m vi·ªác theo gi·ªù gi·∫•c ph√π h·ª£p v·ªõi l·ªëi s·ªëng c·ªßa b·∫°n."
        },
        {
            icon: "üìö",
            title: "Ph√°t tri·ªÉn b·∫£n th√¢n",
            description: "N√¢ng cao k·ªπ nƒÉng gi·∫£ng d·∫°y v√† giao ti·∫øp qua m·ªói bu·ªïi h·ªçc."
        }
    ];

    const steps = [
        {
            number: "01",
            title: "ƒêƒÉng k√Ω h·ªì s∆°",
            description: "ƒêi·ªÅn th√¥ng tin c√° nh√¢n, chuy√™n m√¥n v√† t·∫£i l√™n ·∫£nh ƒë·∫°i di·ªán."
        },
        {
            number: "02",
            title: "X√°c minh t√†i kho·∫£n",
            description: "ƒê·ªôi ng≈© c·ªßa ch√∫ng t√¥i s·∫Ω xem x√©t v√† ph√™ duy·ªát h·ªì s∆° trong 1-3 ng√†y."
        },
        {
            number: "03",
            title: "Thi·∫øt l·∫≠p l·ªõp h·ªçc",
            description: "T·∫°o c√°c kh√≥a h·ªçc, ƒë·∫∑t gi√° v√† l·ªãch d·∫°y theo s·ªü th√≠ch."
        },
        {
            number: "04",
            title: "B·∫Øt ƒë·∫ßu d·∫°y h·ªçc",
            description: "Nh·∫≠n h·ªçc vi√™n ƒë·∫ßu ti√™n v√† b·∫Øt ƒë·∫ßu h√†nh tr√¨nh gi·∫£ng d·∫°y."
        }
    ];

    const faqs = [
        {
            question: "T√¥i c√≥ c·∫ßn b·∫±ng c·∫•p gi·∫£ng d·∫°y kh√¥ng?",
            answer: "Kh√¥ng nh·∫•t thi·∫øt! Ch√∫ng t√¥i ch√†o ƒë√≥n c·∫£ gia s∆∞ chuy√™n nghi·ªáp v√† ng∆∞·ªùi b·∫£n ng·ªØ c√≥ ƒëam m√™ chia s·∫ª ki·∫øn th·ª©c."
        },
        {
            question: "T√¥i c√≥ th·ªÉ ki·∫øm ƒë∆∞·ª£c bao nhi·ªÅu?",
            answer: "Thu nh·∫≠p ph·ª• thu·ªôc v√†o kinh nghi·ªám, s·ªë gi·ªù d·∫°y v√† gi√° b·∫°n ƒë·∫∑t. Gia s∆∞ c√≥ th·ªÉ ki·∫øm t·ª´ 200.000 - 1.000.000 VNƒê/th√°ng."
        },
        {
            question: "T√¥i c·∫ßn thi·∫øt b·ªã g√¨ ƒë·ªÉ b·∫Øt ƒë·∫ßu?",
            answer: "Ch·ªâ c·∫ßn m√°y t√≠nh/laptop c√≥ camera, micro v√† k·∫øt n·ªëi internet ·ªïn ƒë·ªãnh l√† ƒë·ªß ƒë·ªÉ b·∫Øt ƒë·∫ßu."
        },
        {
            question: "Bao l√¢u ƒë·ªÉ ƒë∆∞·ª£c duy·ªát h·ªì s∆°?",
            answer: "Th∆∞·ªùng m·∫•t 1-3 ng√†y l√†m vi·ªác ƒë·ªÉ xem x√©t h·ªì s∆°. Ch√∫ng t√¥i s·∫Ω th√¥ng b√°o qua email khi c√≥ k·∫øt qu·∫£."
        }
    ];

    const stats = [
        { number: "10,000+", label: "Gia s∆∞ ho·∫°t ƒë·ªông" },
        { number: "50,000+", label: "H·ªçc vi√™n h√†i l√≤ng" },
        { number: "100+", label: "Qu·ªëc gia" },
        { number: "24/7", label: "H·ªó tr·ª£" }
    ];

    return (
        <div className="min-h-screen bg-white">
            {/* Hero Section */}
            <section className="relative bg-[#333333] text-white py-20">
                <div className="absolute inset-0 bg-black opacity-20"></div>
                <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div className="text-center">
                        <h1 className="text-4xl md:text-6xl font-bold mb-6">
                            Tr·ªü th√†nh Gia s∆∞
                            <span className="block text-white-300">Thay ƒë·ªïi cu·ªôc s·ªëng</span>
                        </h1>
                        <p className="text-xl md:text-2xl mb-8 max-w-3xl mx-auto opacity-90">
                            Chia s·∫ª ki·∫øn th·ª©c, k·∫øt n·ªëi v·ªõi h·ªçc vi√™n tr√™n to√†n th·∫ø gi·ªõi v√† x√¢y d·ª±ng s·ª± nghi·ªáp gi·∫£ng d·∫°y tr·ª±c tuy·∫øn c·ªßa ri√™ng b·∫°n
                        </p>
                        <div className="flex flex-col sm:flex-row gap-4 justify-center">
                            <button
                                onClick={() => navigate('/become-tutor/register')}
                                className="bg-gray-300 hover:bg-white text-black hover:text-black font-bold py-4 px-8 rounded-full text-lg transition-all duration-300 transform hover:scale-105 shadow-lg"
                            >
                                B·∫Øt ƒë·∫ßu ngay
                                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 ml-2 inline" viewBox="0 0 20 20" fill="currentColor">
                                    <path fillRule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clipRule="evenodd" />
                                </svg>
                            </button>
                            <button className="border-2 border-white text-white hover:bg-white hover:text-black font-bold py-4 px-8 rounded-full text-lg transition-all duration-300">
                                T√¨m hi·ªÉu th√™m
                            </button>
                        </div>
                    </div>
                </div>
            </section>

            {/* Stats Section */}
            <section className="py-16 bg-gray-50">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
                        {stats.map((stat, index) => (
                            <div key={index} className="text-center">
                                <div className="text-3xl md:text-4xl font-bold text-black mb-2">{stat.number}</div>
                                <div className="text-gray-600 font-medium">{stat.label}</div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Benefits Section */}
            <section className="py-20">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div className="text-center mb-16">
                        <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
                            T·∫°i sao ch·ªçn ch√∫ng t√¥i?
                        </h2>
                        <p className="text-xl text-gray-600 max-w-3xl mx-auto">
                            Kh√°m ph√° nh·ªØng l·ª£i √≠ch tuy·ªát v·ªùi khi tr·ªü th√†nh gia s∆∞ tr√™n n·ªÅn t·∫£ng c·ªßa ch√∫ng t√¥i
                        </p>
                    </div>
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
                        {benefits.map((benefit, index) => (
                            <div key={index} className="text-center p-6 rounded-xl bg-white shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2">
                                <div className="text-4xl mb-4">{benefit.icon}</div>
                                <h3 className="text-xl font-bold text-gray-900 mb-3">{benefit.title}</h3>
                                <p className="text-gray-600">{benefit.description}</p>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Process Section */}
            <section className="py-20 bg-gray-50">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div className="text-center mb-16">
                        <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
                            Quy tr√¨nh ƒëƒÉng k√Ω
                        </h2>
                        <p className="text-xl text-gray-600 max-w-3xl mx-auto">
                            Ch·ªâ 4 b∆∞·ªõc ƒë∆°n gi·∫£n ƒë·ªÉ b·∫Øt ƒë·∫ßu h√†nh tr√¨nh gi·∫£ng d·∫°y c·ªßa b·∫°n
                        </p>
                    </div>
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
                        {steps.map((step, index) => (
                            <div key={index} className="relative">
                                <div className="bg-white p-6 rounded-xl shadow-lg h-full">
                                    <div className="flex items-center mb-4">
                                        <div className="bg-black text-white rounded-full w-12 h-12 flex items-center justify-center font-bold text-lg mr-4">
                                            {step.number}
                                        </div>
                                        <h3 className="text-lg font-bold text-gray-900">{step.title}</h3>
                                    </div>
                                    <p className="text-gray-600">{step.description}</p>
                                </div>
                                {index < steps.length - 1 && (
                                    <div className="hidden lg:block absolute top-1/2 -right-4 transform -translate-y-1/2">

                                    </div>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* FAQ Section */}
            <section className="py-20">
                <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div className="text-center mb-16">
                        <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
                            C√¢u h·ªèi th∆∞·ªùng g·∫∑p
                        </h2>
                        <p className="text-xl text-gray-600">
                            Nh·ªØng th·∫Øc m·∫Øc ph·ªï bi·∫øn t·ª´ c√°c gia s∆∞
                        </p>
                    </div>
                    <div className="space-y-6">
                        {faqs.map((faq, index) => (
                            <div key={index} className="bg-white rounded-xl shadow-lg overflow-hidden">
                                <button
                                    onClick={() => setActiveTab(activeTab === index ? -1 : index)}
                                    className="w-full px-6 py-4 text-left flex justify-between items-center hover:bg-gray-50 transition-colors"
                                >
                                    <span className="text-lg font-semibold text-gray-900">{faq.question}</span>
                                    <svg
                                        className={`w-5 h-5 text-gray-500 transition-transform ${activeTab === index ? 'rotate-180' : ''}`}
                                        fill="none"
                                        stroke="currentColor"
                                        viewBox="0 0 24 24"
                                    >
                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 9l-7 7-7-7"></path>
                                    </svg>
                                </button>
                                {activeTab === index && (
                                    <div className="px-6 pb-4">
                                        <p className="text-gray-600">{faq.answer}</p>
                                    </div>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* CTA Section */}
            <section className="py-20 bg-[#333333] text-white">
                <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
                    <h2 className="text-3xl md:text-4xl font-bold mb-6">
                        S·∫µn s√†ng b·∫Øt ƒë·∫ßu h√†nh tr√¨nh c·ªßa b·∫°n?
                    </h2>
                    <p className="text-xl mb-8 opacity-90">
                        Tham gia c·ªông ƒë·ªìng gia s∆∞ v√† b·∫Øt ƒë·∫ßu ki·∫øm ti·ªÅn t·ª´ ki·∫øn th·ª©c c·ªßa b·∫°n ngay h√¥m nay
                    </p>
                    <button
                        onClick={() => navigate('/become-tutor/register')}
                        className="bg-gray-300 hover:bg-white text-black hover:text-black font-bold py-4 px-8 rounded-full text-lg transition-all duration-300 transform hover:scale-105 shadow-lg"
                    >
                        ƒêƒÉng k√Ω ngay
                        <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 ml-2 inline" viewBox="0 0 20 20" fill="currentColor">
                            <path fillRule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clipRule="evenodd" />
                        </svg>
                    </button>
                </div>
            </section>

            {/* Footer */}

        </div>
    );
};

export default BecomeATutorLandingPage; 